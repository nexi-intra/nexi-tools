{
  "name": "people",
  "type": "magicservice",
  "organisation": "magicbutton",
  "magicappversion": "v0.0.1",
  "description": "Application focusing on having a single point of entry in the form of a `person` to find all related information \n- Users, Companies, Groups, Relations, Systems, Countries\n",
  "react": {
    "templates": {
      "formfield": {
        "markup": "<FormField\n control={form.control}\n name=\"##NAME##\"\n render={({ field }) => (\n   <FormItem>\n     <FormLabel>##LABEL##</FormLabel>\n     <FormControl>\n       ##FORMCONTROL##\n     </FormControl>\n     <FormDescription>\n       ##DESCRIPTION##\n     </FormDescription>\n     <FormMessage />\n   </FormItem>\n )}\n/>\n"
      }
    },
    "components": {
      "stringformfield": {
        "name": "formfield",
        "template": {
          "markup": "<FormField\n control={form.control}\n name=\"##NAME##\"\n render={({ field }) => (\n   <FormItem>\n     <FormLabel>##LABEL##</FormLabel>\n     <FormControl>\n       ##FORMCONTROL##\n     </FormControl>\n     <FormDescription>\n       ##DESCRIPTION##\n     </FormDescription>\n     <FormMessage />\n   </FormItem>\n )}\n/>\n"
        },
        "markup": "<Input placeholder=\"##PLACEHOLDER##\" {...field} />\n"
      },
      "numberformfield": {
        "name": "formfield",
        "template": {
          "markup": "<FormField\n control={form.control}\n name=\"##NAME##\"\n render={({ field }) => (\n   <FormItem>\n     <FormLabel>##LABEL##</FormLabel>\n     <FormControl>\n       ##FORMCONTROL##\n     </FormControl>\n     <FormDescription>\n       ##DESCRIPTION##\n     </FormDescription>\n     <FormMessage />\n   </FormItem>\n )}\n/>\n"
        },
        "markup": "<Input placeholder=\"##PLACEHOLDER##\" {...field} />\n"
      },
      "intformfield": {
        "name": "formfield",
        "template": {
          "markup": "<FormField\n control={form.control}\n name=\"##NAME##\"\n render={({ field }) => (\n   <FormItem>\n     <FormLabel>##LABEL##</FormLabel>\n     <FormControl>\n       ##FORMCONTROL##\n     </FormControl>\n     <FormDescription>\n       ##DESCRIPTION##\n     </FormDescription>\n     <FormMessage />\n   </FormItem>\n )}\n/>\n"
        },
        "markup": "<Input placeholder=\"##PLACEHOLDER##\" {...field} />\n"
      },
      "datetimeformfield": {
        "name": "formfield",
        "template": {
          "markup": "<FormField\n control={form.control}\n name=\"##NAME##\"\n render={({ field }) => (\n   <FormItem>\n     <FormLabel>##LABEL##</FormLabel>\n     <FormControl>\n       ##FORMCONTROL##\n     </FormControl>\n     <FormDescription>\n       ##DESCRIPTION##\n     </FormDescription>\n     <FormMessage />\n   </FormItem>\n )}\n/>\n"
        },
        "markup": "<Input placeholder=\"##PLACEHOLDER##\" {...field} />\n"
      },
      "booleanformfield": {
        "name": "formfield",
        "template": {
          "markup": "<FormField\n control={form.control}\n name=\"##NAME##\"\n render={({ field }) => (\n   <FormItem>\n     <FormLabel>##LABEL##</FormLabel>\n     <FormControl>\n       ##FORMCONTROL##\n     </FormControl>\n     <FormDescription>\n       ##DESCRIPTION##\n     </FormDescription>\n     <FormMessage />\n   </FormItem>\n )}\n/>\n"
        },
        "markup": "<div>Boolean not implemented</div>\n"
      },
      "arrayformfield": {
        "name": "formfield",
        "template": {
          "markup": "<FormField\n control={form.control}\n name=\"##NAME##\"\n render={({ field }) => (\n   <FormItem>\n     <FormLabel>##LABEL##</FormLabel>\n     <FormControl>\n       ##FORMCONTROL##\n     </FormControl>\n     <FormDescription>\n       ##DESCRIPTION##\n     </FormDescription>\n     <FormMessage />\n   </FormItem>\n )}\n/>\n"
        },
        "markup": "<Input placeholder=\"##PLACEHOLDER##\" {...field} />\n"
      },
      "lookupformfield": {
        "name": "formfield",
        "template": {
          "markup": "<FormField\n control={form.control}\n name=\"##NAME##\"\n render={({ field }) => (\n   <FormItem>\n     <FormLabel>##LABEL##</FormLabel>\n     <FormControl>\n       ##FORMCONTROL##\n     </FormControl>\n     <FormDescription>\n       ##DESCRIPTION##\n     </FormDescription>\n     <FormMessage />\n   </FormItem>\n )}\n/>\n"
        },
        "markup": "<Input placeholder=\"##PLACEHOLDER##\" {...field} />\n"
      },
      "referenceformfield": {
        "name": "formfield",
        "template": {
          "markup": "<FormField\n control={form.control}\n name=\"##NAME##\"\n render={({ field }) => (\n   <FormItem>\n     <FormLabel>##LABEL##</FormLabel>\n     <FormControl>\n       ##FORMCONTROL##\n     </FormControl>\n     <FormDescription>\n       ##DESCRIPTION##\n     </FormDescription>\n     <FormMessage />\n   </FormItem>\n )}\n/>\n"
        },
        "markup": "<Input placeholder=\"##PLACEHOLDER##\" {...field} />\n"
      },
      "jsonformfield": {
        "name": "formfield",
        "template": {
          "markup": "<FormField\n control={form.control}\n name=\"##NAME##\"\n render={({ field }) => (\n   <FormItem>\n     <FormLabel>##LABEL##</FormLabel>\n     <FormControl>\n       ##FORMCONTROL##\n     </FormControl>\n     <FormDescription>\n       ##DESCRIPTION##\n     </FormDescription>\n     <FormMessage />\n   </FormItem>\n )}\n/>\n"
        },
        "markup": "<Input placeholder=\"##PLACEHOLDER##\" {...field} />\n"
      },
      "viewitem": {
        "name": "viewitem",
        "markup": "export function ViewItem<T>(props: {caption:string, value:T}) {\nconst {caption, value} = props;\nreturn (\n<div>\n  <div className=\"font-bold\">{caption}</h1>\n  <div >{value}</h1>\n</div>\n)\n}\n"
      },
      "formitem": {
        "name": "formitem",
        "markup": "export function EditItem<T>(props: { caption:string, FormField : FormFieldType<T>, value:T, onChange: (value:T) => void}) {\nconst {caption, value,ForField} = props;\nreturn (\n<div>\n  <div className=\"font-bold\">{caption}</h1>\n  <div ><FormField<T> onChange={onChange} value={value} /></h1>\n</div>\n)\n}\n"
      }
    }
  },
  "defaults": {
    "viewitem": {
      "name": "viewitem",
      "markup": "export function ViewItem<T>(props: {caption:string, value:T}) {\nconst {caption, value} = props;\nreturn (\n<div>\n  <div className=\"font-bold\">{caption}</h1>\n  <div >{value}</h1>\n</div>\n)\n}\n"
    },
    "edititem": {
      "name": "formitem",
      "markup": "export function EditItem<T>(props: { caption:string, FormField : FormFieldType<T>, value:T, onChange: (value:T) => void}) {\nconst {caption, value,ForField} = props;\nreturn (\n<div>\n  <div className=\"font-bold\">{caption}</h1>\n  <div ><FormField<T> onChange={onChange} value={value} /></h1>\n</div>\n)\n}\n"
    },
    "primitive": {
      "json": {
        "formfield": {
          "name": "formfield",
          "template": {
            "markup": "<FormField\n control={form.control}\n name=\"##NAME##\"\n render={({ field }) => (\n   <FormItem>\n     <FormLabel>##LABEL##</FormLabel>\n     <FormControl>\n       ##FORMCONTROL##\n     </FormControl>\n     <FormDescription>\n       ##DESCRIPTION##\n     </FormDescription>\n     <FormMessage />\n   </FormItem>\n )}\n/>\n"
          },
          "markup": "<Input placeholder=\"##PLACEHOLDER##\" {...field} />\n"
        }
      },
      "string": {
        "formfield": {
          "name": "formfield",
          "template": {
            "markup": "<FormField\n control={form.control}\n name=\"##NAME##\"\n render={({ field }) => (\n   <FormItem>\n     <FormLabel>##LABEL##</FormLabel>\n     <FormControl>\n       ##FORMCONTROL##\n     </FormControl>\n     <FormDescription>\n       ##DESCRIPTION##\n     </FormDescription>\n     <FormMessage />\n   </FormItem>\n )}\n/>\n"
          },
          "markup": "<Input placeholder=\"##PLACEHOLDER##\" {...field} />\n"
        }
      },
      "number": {
        "formfield": {
          "name": "formfield",
          "template": {
            "markup": "<FormField\n control={form.control}\n name=\"##NAME##\"\n render={({ field }) => (\n   <FormItem>\n     <FormLabel>##LABEL##</FormLabel>\n     <FormControl>\n       ##FORMCONTROL##\n     </FormControl>\n     <FormDescription>\n       ##DESCRIPTION##\n     </FormDescription>\n     <FormMessage />\n   </FormItem>\n )}\n/>\n"
          },
          "markup": "<Input placeholder=\"##PLACEHOLDER##\" {...field} />\n"
        }
      },
      "datetime": {
        "formfield": {
          "name": "formfield",
          "template": {
            "markup": "<FormField\n control={form.control}\n name=\"##NAME##\"\n render={({ field }) => (\n   <FormItem>\n     <FormLabel>##LABEL##</FormLabel>\n     <FormControl>\n       ##FORMCONTROL##\n     </FormControl>\n     <FormDescription>\n       ##DESCRIPTION##\n     </FormDescription>\n     <FormMessage />\n   </FormItem>\n )}\n/>\n"
          },
          "markup": "<Input placeholder=\"##PLACEHOLDER##\" {...field} />\n"
        }
      },
      "int": {
        "formfield": {
          "name": "formfield",
          "template": {
            "markup": "<FormField\n control={form.control}\n name=\"##NAME##\"\n render={({ field }) => (\n   <FormItem>\n     <FormLabel>##LABEL##</FormLabel>\n     <FormControl>\n       ##FORMCONTROL##\n     </FormControl>\n     <FormDescription>\n       ##DESCRIPTION##\n     </FormDescription>\n     <FormMessage />\n   </FormItem>\n )}\n/>\n"
          },
          "markup": "<Input placeholder=\"##PLACEHOLDER##\" {...field} />\n"
        }
      },
      "boolean": {
        "formfield": {
          "name": "formfield",
          "template": {
            "markup": "<FormField\n control={form.control}\n name=\"##NAME##\"\n render={({ field }) => (\n   <FormItem>\n     <FormLabel>##LABEL##</FormLabel>\n     <FormControl>\n       ##FORMCONTROL##\n     </FormControl>\n     <FormDescription>\n       ##DESCRIPTION##\n     </FormDescription>\n     <FormMessage />\n   </FormItem>\n )}\n/>\n"
          },
          "markup": "<div>Boolean not implemented</div>\n"
        }
      },
      "array": {
        "formfield": {
          "name": "formfield",
          "template": {
            "markup": "<FormField\n control={form.control}\n name=\"##NAME##\"\n render={({ field }) => (\n   <FormItem>\n     <FormLabel>##LABEL##</FormLabel>\n     <FormControl>\n       ##FORMCONTROL##\n     </FormControl>\n     <FormDescription>\n       ##DESCRIPTION##\n     </FormDescription>\n     <FormMessage />\n   </FormItem>\n )}\n/>\n"
          },
          "markup": "<Input placeholder=\"##PLACEHOLDER##\" {...field} />\n"
        }
      },
      "reference": {
        "formfield": {
          "name": "formfield",
          "template": {
            "markup": "<FormField\n control={form.control}\n name=\"##NAME##\"\n render={({ field }) => (\n   <FormItem>\n     <FormLabel>##LABEL##</FormLabel>\n     <FormControl>\n       ##FORMCONTROL##\n     </FormControl>\n     <FormDescription>\n       ##DESCRIPTION##\n     </FormDescription>\n     <FormMessage />\n   </FormItem>\n )}\n/>\n"
          },
          "markup": "<Input placeholder=\"##PLACEHOLDER##\" {...field} />\n"
        }
      }
    }
  },
  "baseattributes": {
    "record": [
      {
        "name": "tenant",
        "type": "string",
        "displayname": "Tenant",
        "hidden": true,
        "required": true
      },
      {
        "name": "searchindex",
        "type": "string",
        "displayname": "Search Index",
        "description": "Search Index is used for concatenating all searchable fields in a single field making in easier to search\n",
        "hidden": true,
        "required": true
      },
      {
        "name": "name",
        "type": "string",
        "displayname": "Name",
        "required": true
      },
      {
        "name": "description",
        "displayname": "Description",
        "type": "string",
        "required": false
      }
    ]
  },
  "entities": {
    "category": {
      "name": "category",
      "description": "Category of a tool",
      "baselineattributes": [
        {
          "name": "tenant",
          "type": "string",
          "displayname": "Tenant",
          "hidden": true,
          "required": true
        },
        {
          "name": "searchindex",
          "type": "string",
          "displayname": "Search Index",
          "description": "Search Index is used for concatenating all searchable fields in a single field making in easier to search\n",
          "hidden": true,
          "required": true
        },
        {
          "name": "name",
          "type": "string",
          "displayname": "Name",
          "required": true
        },
        {
          "name": "description",
          "displayname": "Description",
          "type": "string",
          "required": false
        }
      ],
      "additionalattributes": null
    },
    "tool": {
      "name": "tool",
      "description": "Tool",
      "baselineattributes": [
        {
          "name": "tenant",
          "type": "string",
          "displayname": "Tenant",
          "hidden": true,
          "required": true
        },
        {
          "name": "searchindex",
          "type": "string",
          "displayname": "Search Index",
          "description": "Search Index is used for concatenating all searchable fields in a single field making in easier to search\n",
          "hidden": true,
          "required": true
        },
        {
          "name": "name",
          "type": "string",
          "displayname": "Name",
          "required": true
        },
        {
          "name": "description",
          "displayname": "Description",
          "type": "string",
          "required": false
        }
      ],
      "additionalattributes": [
        {
          "name": "category",
          "displayname": "Category",
          "type": "reference",
          "required": true,
          "entity": {
            "name": "category",
            "description": "Category of a tool",
            "baselineattributes": [
              {
                "name": "tenant",
                "type": "string",
                "displayname": "Tenant",
                "hidden": true,
                "required": true
              },
              {
                "name": "searchindex",
                "type": "string",
                "displayname": "Search Index",
                "description": "Search Index is used for concatenating all searchable fields in a single field making in easier to search\n",
                "hidden": true,
                "required": true
              },
              {
                "name": "name",
                "type": "string",
                "displayname": "Name",
                "required": true
              },
              {
                "name": "description",
                "displayname": "Description",
                "type": "string",
                "required": false
              }
            ],
            "additionalattributes": null
          }
        }
      ]
    },
    "region": {
      "name": "region",
      "description": "Region",
      "baselineattributes": [
        {
          "name": "tenant",
          "type": "string",
          "displayname": "Tenant",
          "hidden": true,
          "required": true
        },
        {
          "name": "searchindex",
          "type": "string",
          "displayname": "Search Index",
          "description": "Search Index is used for concatenating all searchable fields in a single field making in easier to search\n",
          "hidden": true,
          "required": true
        },
        {
          "name": "name",
          "type": "string",
          "displayname": "Name",
          "required": true
        },
        {
          "name": "description",
          "displayname": "Description",
          "type": "string",
          "required": false
        }
      ],
      "additionalattributes": null
    },
    "country": {
      "name": "country",
      "displayname": "Country",
      "description": "Country",
      "baselineattributes": [
        {
          "name": "tenant",
          "type": "string",
          "displayname": "Tenant",
          "hidden": true,
          "required": true
        },
        {
          "name": "searchindex",
          "type": "string",
          "displayname": "Search Index",
          "description": "Search Index is used for concatenating all searchable fields in a single field making in easier to search\n",
          "hidden": true,
          "required": true
        },
        {
          "name": "name",
          "type": "string",
          "displayname": "Name",
          "required": true
        },
        {
          "name": "description",
          "displayname": "Description",
          "type": "string",
          "required": false
        }
      ],
      "additionalattributes": [
        {
          "name": "region",
          "type": "reference",
          "required": true,
          "entity": {
            "name": "region",
            "description": "Region",
            "baselineattributes": [
              {
                "name": "tenant",
                "type": "string",
                "displayname": "Tenant",
                "hidden": true,
                "required": true
              },
              {
                "name": "searchindex",
                "type": "string",
                "displayname": "Search Index",
                "description": "Search Index is used for concatenating all searchable fields in a single field making in easier to search\n",
                "hidden": true,
                "required": true
              },
              {
                "name": "name",
                "type": "string",
                "displayname": "Name",
                "required": true
              },
              {
                "name": "description",
                "displayname": "Description",
                "type": "string",
                "required": false
              }
            ],
            "additionalattributes": null
          }
        }
      ]
    }
  },
  "models": {
    "itemMethods": [
      {
        "name": "read",
        "description": "Read a single item",
        "parameters": [
          {
            "name": "id",
            "description": "The id of the item",
            "type": "int64",
            "required": true
          }
        ],
        "returns": {
          "type": "object"
        }
      },
      {
        "name": "create",
        "description": "Create a new item",
        "parameters": [
          {
            "name": "item",
            "description": "The item to create",
            "type": "object",
            "required": true
          }
        ],
        "returns": {
          "type": "object"
        }
      },
      {
        "name": "update",
        "description": "Update an existing item",
        "parameters": [
          {
            "name": "item",
            "description": "The item to update",
            "type": "object",
            "required": true
          }
        ],
        "returns": {
          "type": "object"
        }
      },
      {
        "name": "delete",
        "description": "Delete an existing item",
        "parameters": [
          {
            "name": "id",
            "description": "The id of the item",
            "type": "int64",
            "required": true
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "search",
        "description": "Search for items",
        "parameters": [
          {
            "name": "query",
            "description": "The search query",
            "type": "string",
            "required": true
          }
        ],
        "returns": {
          "type": "page"
        }
      }
    ]
  },
  "services": [
    {
      "name": "category",
      "description": "Categories",
      "entity": {
        "type": "record",
        "entity": {
          "name": "category",
          "description": "Category of a tool",
          "baselineattributes": [
            {
              "name": "tenant",
              "type": "string",
              "displayname": "Tenant",
              "hidden": true,
              "required": true
            },
            {
              "name": "searchindex",
              "type": "string",
              "displayname": "Search Index",
              "description": "Search Index is used for concatenating all searchable fields in a single field making in easier to search\n",
              "hidden": true,
              "required": true
            },
            {
              "name": "name",
              "type": "string",
              "displayname": "Name",
              "required": true
            },
            {
              "name": "description",
              "displayname": "Description",
              "type": "string",
              "required": false
            }
          ],
          "additionalattributes": null
        },
        "model": "category",
        "objectname": "Category"
      },
      "methods": [
        {
          "name": "read",
          "description": "Read a single item",
          "parameters": [
            {
              "name": "id",
              "description": "The id of the item",
              "type": "int64",
              "required": true
            }
          ],
          "returns": {
            "type": "object"
          }
        },
        {
          "name": "create",
          "description": "Create a new item",
          "parameters": [
            {
              "name": "item",
              "description": "The item to create",
              "type": "object",
              "required": true
            }
          ],
          "returns": {
            "type": "object"
          }
        },
        {
          "name": "update",
          "description": "Update an existing item",
          "parameters": [
            {
              "name": "item",
              "description": "The item to update",
              "type": "object",
              "required": true
            }
          ],
          "returns": {
            "type": "object"
          }
        },
        {
          "name": "delete",
          "description": "Delete an existing item",
          "parameters": [
            {
              "name": "id",
              "description": "The id of the item",
              "type": "int64",
              "required": true
            }
          ],
          "returns": {
            "type": "void"
          }
        },
        {
          "name": "search",
          "description": "Search for items",
          "parameters": [
            {
              "name": "query",
              "description": "The search query",
              "type": "string",
              "required": true
            }
          ],
          "returns": {
            "type": "page"
          }
        }
      ]
    },
    {
      "name": "tool",
      "description": "Tools",
      "entity": {
        "type": "record",
        "entity": {
          "name": "tool",
          "description": "Tool",
          "baselineattributes": [
            {
              "name": "tenant",
              "type": "string",
              "displayname": "Tenant",
              "hidden": true,
              "required": true
            },
            {
              "name": "searchindex",
              "type": "string",
              "displayname": "Search Index",
              "description": "Search Index is used for concatenating all searchable fields in a single field making in easier to search\n",
              "hidden": true,
              "required": true
            },
            {
              "name": "name",
              "type": "string",
              "displayname": "Name",
              "required": true
            },
            {
              "name": "description",
              "displayname": "Description",
              "type": "string",
              "required": false
            }
          ],
          "additionalattributes": [
            {
              "name": "category",
              "displayname": "Category",
              "type": "reference",
              "required": true,
              "entity": {
                "name": "category",
                "description": "Category of a tool",
                "baselineattributes": [
                  {
                    "name": "tenant",
                    "type": "string",
                    "displayname": "Tenant",
                    "hidden": true,
                    "required": true
                  },
                  {
                    "name": "searchindex",
                    "type": "string",
                    "displayname": "Search Index",
                    "description": "Search Index is used for concatenating all searchable fields in a single field making in easier to search\n",
                    "hidden": true,
                    "required": true
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "displayname": "Name",
                    "required": true
                  },
                  {
                    "name": "description",
                    "displayname": "Description",
                    "type": "string",
                    "required": false
                  }
                ],
                "additionalattributes": null
              }
            }
          ]
        },
        "model": "tool",
        "objectname": "Tool"
      },
      "methods": [
        {
          "name": "read",
          "description": "Read a single item",
          "parameters": [
            {
              "name": "id",
              "description": "The id of the item",
              "type": "int64",
              "required": true
            }
          ],
          "returns": {
            "type": "object"
          }
        },
        {
          "name": "create",
          "description": "Create a new item",
          "parameters": [
            {
              "name": "item",
              "description": "The item to create",
              "type": "object",
              "required": true
            }
          ],
          "returns": {
            "type": "object"
          }
        },
        {
          "name": "update",
          "description": "Update an existing item",
          "parameters": [
            {
              "name": "item",
              "description": "The item to update",
              "type": "object",
              "required": true
            }
          ],
          "returns": {
            "type": "object"
          }
        },
        {
          "name": "delete",
          "description": "Delete an existing item",
          "parameters": [
            {
              "name": "id",
              "description": "The id of the item",
              "type": "int64",
              "required": true
            }
          ],
          "returns": {
            "type": "void"
          }
        },
        {
          "name": "search",
          "description": "Search for items",
          "parameters": [
            {
              "name": "query",
              "description": "The search query",
              "type": "string",
              "required": true
            }
          ],
          "returns": {
            "type": "page"
          }
        }
      ]
    },
    {
      "name": "region",
      "description": "Regions",
      "entity": {
        "type": "record",
        "entity": {
          "name": "region",
          "description": "Region",
          "baselineattributes": [
            {
              "name": "tenant",
              "type": "string",
              "displayname": "Tenant",
              "hidden": true,
              "required": true
            },
            {
              "name": "searchindex",
              "type": "string",
              "displayname": "Search Index",
              "description": "Search Index is used for concatenating all searchable fields in a single field making in easier to search\n",
              "hidden": true,
              "required": true
            },
            {
              "name": "name",
              "type": "string",
              "displayname": "Name",
              "required": true
            },
            {
              "name": "description",
              "displayname": "Description",
              "type": "string",
              "required": false
            }
          ],
          "additionalattributes": null
        },
        "model": "region",
        "objectname": "Region"
      },
      "methods": [
        {
          "name": "read",
          "description": "Read a single item",
          "parameters": [
            {
              "name": "id",
              "description": "The id of the item",
              "type": "int64",
              "required": true
            }
          ],
          "returns": {
            "type": "object"
          }
        },
        {
          "name": "create",
          "description": "Create a new item",
          "parameters": [
            {
              "name": "item",
              "description": "The item to create",
              "type": "object",
              "required": true
            }
          ],
          "returns": {
            "type": "object"
          }
        },
        {
          "name": "update",
          "description": "Update an existing item",
          "parameters": [
            {
              "name": "item",
              "description": "The item to update",
              "type": "object",
              "required": true
            }
          ],
          "returns": {
            "type": "object"
          }
        },
        {
          "name": "delete",
          "description": "Delete an existing item",
          "parameters": [
            {
              "name": "id",
              "description": "The id of the item",
              "type": "int64",
              "required": true
            }
          ],
          "returns": {
            "type": "void"
          }
        },
        {
          "name": "search",
          "description": "Search for items",
          "parameters": [
            {
              "name": "query",
              "description": "The search query",
              "type": "string",
              "required": true
            }
          ],
          "returns": {
            "type": "page"
          }
        }
      ]
    },
    {
      "name": "country",
      "description": "Countries",
      "entity": {
        "type": "record",
        "entity": {
          "name": "country",
          "displayname": "Country",
          "description": "Country",
          "baselineattributes": [
            {
              "name": "tenant",
              "type": "string",
              "displayname": "Tenant",
              "hidden": true,
              "required": true
            },
            {
              "name": "searchindex",
              "type": "string",
              "displayname": "Search Index",
              "description": "Search Index is used for concatenating all searchable fields in a single field making in easier to search\n",
              "hidden": true,
              "required": true
            },
            {
              "name": "name",
              "type": "string",
              "displayname": "Name",
              "required": true
            },
            {
              "name": "description",
              "displayname": "Description",
              "type": "string",
              "required": false
            }
          ],
          "additionalattributes": [
            {
              "name": "region",
              "type": "reference",
              "required": true,
              "entity": {
                "name": "region",
                "description": "Region",
                "baselineattributes": [
                  {
                    "name": "tenant",
                    "type": "string",
                    "displayname": "Tenant",
                    "hidden": true,
                    "required": true
                  },
                  {
                    "name": "searchindex",
                    "type": "string",
                    "displayname": "Search Index",
                    "description": "Search Index is used for concatenating all searchable fields in a single field making in easier to search\n",
                    "hidden": true,
                    "required": true
                  },
                  {
                    "name": "name",
                    "type": "string",
                    "displayname": "Name",
                    "required": true
                  },
                  {
                    "name": "description",
                    "displayname": "Description",
                    "type": "string",
                    "required": false
                  }
                ],
                "additionalattributes": null
              }
            }
          ]
        },
        "model": "country",
        "objectname": "Country"
      },
      "methods": [
        {
          "name": "read",
          "description": "Read a single item",
          "parameters": [
            {
              "name": "id",
              "description": "The id of the item",
              "type": "int64",
              "required": true
            }
          ],
          "returns": {
            "type": "object"
          }
        },
        {
          "name": "create",
          "description": "Create a new item",
          "parameters": [
            {
              "name": "item",
              "description": "The item to create",
              "type": "object",
              "required": true
            }
          ],
          "returns": {
            "type": "object"
          }
        },
        {
          "name": "update",
          "description": "Update an existing item",
          "parameters": [
            {
              "name": "item",
              "description": "The item to update",
              "type": "object",
              "required": true
            }
          ],
          "returns": {
            "type": "object"
          }
        },
        {
          "name": "delete",
          "description": "Delete an existing item",
          "parameters": [
            {
              "name": "id",
              "description": "The id of the item",
              "type": "int64",
              "required": true
            }
          ],
          "returns": {
            "type": "void"
          }
        },
        {
          "name": "search",
          "description": "Search for items",
          "parameters": [
            {
              "name": "query",
              "description": "The search query",
              "type": "string",
              "required": true
            }
          ],
          "returns": {
            "type": "page"
          }
        }
      ]
    }
  ]
}
